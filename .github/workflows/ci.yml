name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Get dependencies
      run: make get

    - name: Tidy dependencies
      run: make tidy

    - name: Run tests with race detection
      run: make test-race

    - name: Run integration tests
      run: make test-integration

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build binary
      run: make build-linux

    - name: Test binary
      run: ./llm --help

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.62.2
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Run linter
      run: make lint

  wikipedia:
    name: Wikipedia Integration Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    - name: Cache Wikipedia data
      uses: actions/cache@v3
      with:
        path: |
          ./wiki_test
          ~/go/pkg/mod
        key: ${{ runner.os }}-wikipedia-v1
        restore-keys: |
          ${{ runner.os }}-wikipedia-

    - name: Build project
      run: make build-linux

    - name: Test Wikipedia sample data
      run: |
        # Test sample Wikipedia data processing
        ./llm -mode=download -sample=true -datadir=wiki_test -maxarticles=5
        
        # Verify training data was created
        if [ ! -f "wiki_test/training_data.txt" ]; then
          echo "Training data file not created"
          exit 1
        fi

    - name: Validate content filtering
      run: |
        # Check that structural content was filtered out
        content_file="wiki_test/training_data.txt"
        
        # Verify content quality
        line_count=$(wc -l < "$content_file")
        word_count=$(wc -w < "$content_file")
        
        echo "Content statistics:"
        echo "  Lines: $line_count"
        echo "  Words: $word_count"
        
        # Minimum quality checks
        if [ "$line_count" -lt 5 ]; then
          echo "ERROR: Too few lines of content ($line_count)"
          exit 1
        fi
        
        if [ "$word_count" -lt 50 ]; then
          echo "ERROR: Too few words of content ($word_count)"
          exit 1
        fi

    - name: Test Wikipedia training
      run: |
        # Train on Wikipedia data
        ./llm -mode=train -datadir=wiki_test -epochs=2 -lr=0.001
        
        # Verify model was created
        if [ ! -f "model/model.json" ] || [ ! -f "model/tokenizer.json" ]; then
          echo "Model files not created"
          exit 1
        fi

    - name: Test generation
      run: |
        # Test generation with Wikipedia-trained model
        ./llm -mode=generate -text="Science" -maxtokens=10 -temperature=0.8
        ./llm -mode=generate -text="Technology" -maxtokens=10 -temperature=0.8 